---
import type { HTMLAttributes } from "astro/types";
import { readSingleton } from "@directus/sdk";
import { dbClient } from "@jonsimeon/lib/db";
import { Badge, Card, Heading, Logo, Section } from "@jonsimeon/ui/react";
import { Icon } from "astro-icon/components";

const links = await dbClient.request(
  readSingleton("main", {
    fields: [{ toc: [{ icon_badge_id: ["icon", "href", "label"] }] }],
    deep: {
      toc: { _filter: { icon_badge_id: { tags: { _icontains: "toc-link" } } } },
    },
  }),
);

const filters = await dbClient.request(
  readSingleton("main", {
    fields: [{ toc: [{ icon_badge_id: ["icon", "href", "label"] }] }],
    deep: {
      toc: { _filter: { icon_badge_id: { tags: { _icontains: "filter" } } } },
    },
  }),
);

interface Props extends HTMLAttributes<"nav"> {
  classes?: string;
}
---

<Section
  aria-label="nav"
  classes="w-72 xl:w-56"
  tagType="nav"
  innerClasses="flex flex-col gap-4 md:pr-0"
>
  <Logo />
  <Card color="warning" classes="mt-5">
    <Heading
      tagName="h3"
      size="h3"
      addMargin={false}
      classes="text-warning-content pb-1">Links</Heading
    >
    <ul class="flex flex-col pb-1 gap-1">
      {
        links.toc!.map((i) => (
          <a href={i.icon_badge_id.href}>
            <Badge>
              <Icon name={i.icon_badge_id.icon} />
              <p>{i.icon_badge_id.label}</p>
            </Badge>
          </a>
        ))
      }
    </ul>
  </Card>
  <Card color="info">
    <Heading
      tagName="h3"
      size="h3"
      addMargin={false}
      classes="text-info-content pb-1"
    >
      Filters
    </Heading>
    <ul class="flex flex-col pb-2 gap-2">
      {
        filters.toc!.map((i) => (
          <Badge>
            <Icon name={i.icon_badge_id.icon} /> <p>{i.icon_badge_id.label}</p>
          </Badge>
        ))
      }
    </ul>
  </Card>
</Section>
